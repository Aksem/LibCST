# Copyright (c) Meta Platforms, Inc. and affiliates.
#
# This source code is licensed under the MIT license found in the
# LICENSE file in the root directory of this source tree.


# This file was generated by libcst.codegen.gen_matcher_classes
from dataclasses import dataclass
from typing import Optional, Sequence, Union

import libcst as cst
from libcst.matchers._match_types import (
    LeftParenMatchType,
    MatchSequenceElementOrMatchStarMatchType,
    MetadataMatchType,
    RightParenMatchType,
)
from libcst.matchers._matcher_base import (
    AllOf,
    AtLeastN,
    AtMostN,
    BaseMatcherNode,
    DoNotCare,
    DoNotCareSentinel,
    MatchIfTrue,
    OneOf,
)
from libcst.matchers.nodes._left_square_bracket import LeftSquareBracket
from libcst.matchers.nodes._right_square_bracket import RightSquareBracket


@dataclass(frozen=True, eq=False, unsafe_hash=False)
class MatchList(BaseMatcherNode):
    patterns: Union[
        Sequence[
            Union[
                MatchSequenceElementOrMatchStarMatchType,
                DoNotCareSentinel,
                OneOf[MatchSequenceElementOrMatchStarMatchType],
                AllOf[MatchSequenceElementOrMatchStarMatchType],
                AtLeastN[
                    Union[
                        MatchSequenceElementOrMatchStarMatchType,
                        DoNotCareSentinel,
                        OneOf[MatchSequenceElementOrMatchStarMatchType],
                        AllOf[MatchSequenceElementOrMatchStarMatchType],
                    ]
                ],
                AtMostN[
                    Union[
                        MatchSequenceElementOrMatchStarMatchType,
                        DoNotCareSentinel,
                        OneOf[MatchSequenceElementOrMatchStarMatchType],
                        AllOf[MatchSequenceElementOrMatchStarMatchType],
                    ]
                ],
            ]
        ],
        DoNotCareSentinel,
        MatchIfTrue[
            Sequence[
                Union[
                    cst.MatchSequenceElement,
                    cst.MatchStar,
                    OneOf[Union[cst.MatchSequenceElement, cst.MatchStar]],
                    AllOf[Union[cst.MatchSequenceElement, cst.MatchStar]],
                ]
            ]
        ],
        OneOf[
            Union[
                Sequence[
                    Union[
                        MatchSequenceElementOrMatchStarMatchType,
                        OneOf[MatchSequenceElementOrMatchStarMatchType],
                        AllOf[MatchSequenceElementOrMatchStarMatchType],
                        AtLeastN[
                            Union[
                                MatchSequenceElementOrMatchStarMatchType,
                                OneOf[MatchSequenceElementOrMatchStarMatchType],
                                AllOf[MatchSequenceElementOrMatchStarMatchType],
                            ]
                        ],
                        AtMostN[
                            Union[
                                MatchSequenceElementOrMatchStarMatchType,
                                OneOf[MatchSequenceElementOrMatchStarMatchType],
                                AllOf[MatchSequenceElementOrMatchStarMatchType],
                            ]
                        ],
                    ]
                ],
                MatchIfTrue[
                    Sequence[
                        Union[
                            cst.MatchSequenceElement,
                            cst.MatchStar,
                            OneOf[Union[cst.MatchSequenceElement, cst.MatchStar]],
                            AllOf[Union[cst.MatchSequenceElement, cst.MatchStar]],
                        ]
                    ]
                ],
            ]
        ],
        AllOf[
            Union[
                Sequence[
                    Union[
                        MatchSequenceElementOrMatchStarMatchType,
                        OneOf[MatchSequenceElementOrMatchStarMatchType],
                        AllOf[MatchSequenceElementOrMatchStarMatchType],
                        AtLeastN[
                            Union[
                                MatchSequenceElementOrMatchStarMatchType,
                                OneOf[MatchSequenceElementOrMatchStarMatchType],
                                AllOf[MatchSequenceElementOrMatchStarMatchType],
                            ]
                        ],
                        AtMostN[
                            Union[
                                MatchSequenceElementOrMatchStarMatchType,
                                OneOf[MatchSequenceElementOrMatchStarMatchType],
                                AllOf[MatchSequenceElementOrMatchStarMatchType],
                            ]
                        ],
                    ]
                ],
                MatchIfTrue[
                    Sequence[
                        Union[
                            cst.MatchSequenceElement,
                            cst.MatchStar,
                            OneOf[Union[cst.MatchSequenceElement, cst.MatchStar]],
                            AllOf[Union[cst.MatchSequenceElement, cst.MatchStar]],
                        ]
                    ]
                ],
            ]
        ],
    ] = DoNotCare()
    lbracket: Union[
        Optional["LeftSquareBracket"],
        MetadataMatchType,
        MatchIfTrue[Optional[cst.LeftSquareBracket]],
        DoNotCareSentinel,
        OneOf[
            Union[
                Optional["LeftSquareBracket"],
                MetadataMatchType,
                MatchIfTrue[Optional[cst.LeftSquareBracket]],
            ]
        ],
        AllOf[
            Union[
                Optional["LeftSquareBracket"],
                MetadataMatchType,
                MatchIfTrue[Optional[cst.LeftSquareBracket]],
            ]
        ],
    ] = DoNotCare()
    rbracket: Union[
        Optional["RightSquareBracket"],
        MetadataMatchType,
        MatchIfTrue[Optional[cst.RightSquareBracket]],
        DoNotCareSentinel,
        OneOf[
            Union[
                Optional["RightSquareBracket"],
                MetadataMatchType,
                MatchIfTrue[Optional[cst.RightSquareBracket]],
            ]
        ],
        AllOf[
            Union[
                Optional["RightSquareBracket"],
                MetadataMatchType,
                MatchIfTrue[Optional[cst.RightSquareBracket]],
            ]
        ],
    ] = DoNotCare()
    lpar: Union[
        Sequence[
            Union[
                LeftParenMatchType,
                DoNotCareSentinel,
                OneOf[LeftParenMatchType],
                AllOf[LeftParenMatchType],
                AtLeastN[
                    Union[
                        LeftParenMatchType,
                        DoNotCareSentinel,
                        OneOf[LeftParenMatchType],
                        AllOf[LeftParenMatchType],
                    ]
                ],
                AtMostN[
                    Union[
                        LeftParenMatchType,
                        DoNotCareSentinel,
                        OneOf[LeftParenMatchType],
                        AllOf[LeftParenMatchType],
                    ]
                ],
            ]
        ],
        DoNotCareSentinel,
        MatchIfTrue[Sequence[cst.LeftParen]],
        OneOf[
            Union[
                Sequence[
                    Union[
                        LeftParenMatchType,
                        OneOf[LeftParenMatchType],
                        AllOf[LeftParenMatchType],
                        AtLeastN[
                            Union[
                                LeftParenMatchType,
                                OneOf[LeftParenMatchType],
                                AllOf[LeftParenMatchType],
                            ]
                        ],
                        AtMostN[
                            Union[
                                LeftParenMatchType,
                                OneOf[LeftParenMatchType],
                                AllOf[LeftParenMatchType],
                            ]
                        ],
                    ]
                ],
                MatchIfTrue[Sequence[cst.LeftParen]],
            ]
        ],
        AllOf[
            Union[
                Sequence[
                    Union[
                        LeftParenMatchType,
                        OneOf[LeftParenMatchType],
                        AllOf[LeftParenMatchType],
                        AtLeastN[
                            Union[
                                LeftParenMatchType,
                                OneOf[LeftParenMatchType],
                                AllOf[LeftParenMatchType],
                            ]
                        ],
                        AtMostN[
                            Union[
                                LeftParenMatchType,
                                OneOf[LeftParenMatchType],
                                AllOf[LeftParenMatchType],
                            ]
                        ],
                    ]
                ],
                MatchIfTrue[Sequence[cst.LeftParen]],
            ]
        ],
    ] = DoNotCare()
    rpar: Union[
        Sequence[
            Union[
                RightParenMatchType,
                DoNotCareSentinel,
                OneOf[RightParenMatchType],
                AllOf[RightParenMatchType],
                AtLeastN[
                    Union[
                        RightParenMatchType,
                        DoNotCareSentinel,
                        OneOf[RightParenMatchType],
                        AllOf[RightParenMatchType],
                    ]
                ],
                AtMostN[
                    Union[
                        RightParenMatchType,
                        DoNotCareSentinel,
                        OneOf[RightParenMatchType],
                        AllOf[RightParenMatchType],
                    ]
                ],
            ]
        ],
        DoNotCareSentinel,
        MatchIfTrue[Sequence[cst.RightParen]],
        OneOf[
            Union[
                Sequence[
                    Union[
                        RightParenMatchType,
                        OneOf[RightParenMatchType],
                        AllOf[RightParenMatchType],
                        AtLeastN[
                            Union[
                                RightParenMatchType,
                                OneOf[RightParenMatchType],
                                AllOf[RightParenMatchType],
                            ]
                        ],
                        AtMostN[
                            Union[
                                RightParenMatchType,
                                OneOf[RightParenMatchType],
                                AllOf[RightParenMatchType],
                            ]
                        ],
                    ]
                ],
                MatchIfTrue[Sequence[cst.RightParen]],
            ]
        ],
        AllOf[
            Union[
                Sequence[
                    Union[
                        RightParenMatchType,
                        OneOf[RightParenMatchType],
                        AllOf[RightParenMatchType],
                        AtLeastN[
                            Union[
                                RightParenMatchType,
                                OneOf[RightParenMatchType],
                                AllOf[RightParenMatchType],
                            ]
                        ],
                        AtMostN[
                            Union[
                                RightParenMatchType,
                                OneOf[RightParenMatchType],
                                AllOf[RightParenMatchType],
                            ]
                        ],
                    ]
                ],
                MatchIfTrue[Sequence[cst.RightParen]],
            ]
        ],
    ] = DoNotCare()
    metadata: Union[
        MetadataMatchType,
        DoNotCareSentinel,
        OneOf[MetadataMatchType],
        AllOf[MetadataMatchType],
    ] = DoNotCare()
